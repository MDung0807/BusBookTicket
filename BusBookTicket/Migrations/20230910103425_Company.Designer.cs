// <auto-generated />
using System;
using BusBookTicket.EntityFW;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusBookTicket.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230910103425_Company")]
    partial class Company
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusBookTicket.CompanyManage.Models.Bus", b =>
                {
                    b.Property<int>("busID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("busID"));

                    b.Property<string>("busNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("busNumber");

                    b.Property<int?>("busTypeID")
                        .HasColumnType("int");

                    b.HasKey("busID");

                    b.HasIndex("busTypeID");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BusBookTicket.CompanyManage.Models.BusType", b =>
                {
                    b.Property<int>("busTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("busTypeID"));

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalSeats")
                        .HasColumnType("int");

                    b.HasKey("busTypeID");

                    b.ToTable("BusesType");
                });

            modelBuilder.Entity("BusBookTicket.CompanyManage.Models.Company", b =>
                {
                    b.Property<int>("companyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("companyID"));

                    b.Property<int?>("busID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("companyID");

                    b.HasIndex("busID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BusBookTicket.CustomerManage.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BusBookTicket.CompanyManage.Models.Bus", b =>
                {
                    b.HasOne("BusBookTicket.CompanyManage.Models.BusType", "BusType")
                        .WithMany()
                        .HasForeignKey("busTypeID");

                    b.Navigation("BusType");
                });

            modelBuilder.Entity("BusBookTicket.CompanyManage.Models.Company", b =>
                {
                    b.HasOne("BusBookTicket.CompanyManage.Models.Bus", "bus")
                        .WithMany("Companys")
                        .HasForeignKey("busID");

                    b.Navigation("bus");
                });

            modelBuilder.Entity("BusBookTicket.CompanyManage.Models.Bus", b =>
                {
                    b.Navigation("Companys");
                });
#pragma warning restore 612, 618
        }
    }
}
