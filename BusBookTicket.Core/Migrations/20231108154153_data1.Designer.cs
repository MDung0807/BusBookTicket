// <auto-generated />
using System;
using BusBookTicket.Core.Models.EntityFW;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusBookTicket.Core.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231108154153_data1")]
    partial class data1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("roleID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Username");

                    b.HasIndex("Username");

                    b.HasIndex("roleID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.AdministrativeRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AdministrativeRegions");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.AdministrativeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AdministrativeUnits");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDeparture")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TotalPrice")
                        .HasColumnType("bigint");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("busStationEndID")
                        .HasColumnType("int");

                    b.Property<int>("busStationStartID")
                        .HasColumnType("int");

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.Property<int>("discountID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("busStationEndID");

                    b.HasIndex("busStationStartID");

                    b.HasIndex("customerID");

                    b.HasIndex("discountID");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BillItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("billID")
                        .HasColumnType("int");

                    b.Property<int>("ticketItemID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("billID");

                    b.HasIndex("ticketItemID")
                        .IsUnique();

                    b.ToTable("BillItems");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("busTypeID")
                        .HasColumnType("int");

                    b.Property<int>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("busTypeID");

                    b.HasIndex("companyID");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BusStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("wardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("wardId");

                    b.ToTable("BusStations");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BusStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("busID")
                        .HasColumnType("int");

                    b.Property<int>("busStationID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("busID");

                    b.HasIndex("busStationID");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BusesType");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("accountID")
                        .HasColumnType("int");

                    b.Property<int>("wardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("accountID")
                        .IsUnique();

                    b.HasIndex("wardId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("accountID")
                        .HasColumnType("int");

                    b.Property<int?>("rankID")
                        .HasColumnType("int");

                    b.Property<int>("wardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("accountID")
                        .IsUnique();

                    b.HasIndex("rankID");

                    b.HasIndex("wardId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.Property<int?>("rankID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rankID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("administrativeUnitId")
                        .HasColumnType("int");

                    b.Property<int>("provinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("administrativeUnitId");

                    b.HasIndex("provinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Images", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("id01")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("objectModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("administrativeRegionId")
                        .HasColumnType("int");

                    b.Property<int>("administrativeUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("administrativeRegionId");

                    b.HasIndex("administrativeUnitId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Reviews")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("busID")
                        .HasColumnType("int");

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("busID");

                    b.HasIndex("customerID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleName");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("busID")
                        .HasColumnType("int");

                    b.Property<int>("seatTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("busID");

                    b.HasIndex("seatTypeID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.SeatType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int?>("companyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("companyID");

                    b.ToTable("SeatTypes");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("busID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("busID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.TicketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("ticketID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ticketID");

                    b.ToTable("TicketItems");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<int>("administrativeUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("administrativeUnitId");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Account", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("roleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Bill", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.BusStation", "BusStationEnd")
                        .WithMany("TicketEnds")
                        .HasForeignKey("busStationEndID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.BusStation", "BusStationStart")
                        .WithMany("TicketStarts")
                        .HasForeignKey("busStationStartID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.Customer", "Customer")
                        .WithMany("Tickets")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.Discount", "Discount")
                        .WithMany("Tickets")
                        .HasForeignKey("discountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusStationEnd");

                    b.Navigation("BusStationStart");

                    b.Navigation("Customer");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BillItem", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Bill", "Bill")
                        .WithMany("BillItems")
                        .HasForeignKey("billID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.TicketItem", "TicketItem")
                        .WithOne("BillItem")
                        .HasForeignKey("BusBookTicket.Core.Models.Entity.BillItem", "ticketItemID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("TicketItem");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Bus", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.BusType", "BusType")
                        .WithMany("Buses")
                        .HasForeignKey("busTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.Company", "Company")
                        .WithMany("Buses")
                        .HasForeignKey("companyID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusType");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BusStation", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Ward", "Ward")
                        .WithMany("BusStations")
                        .HasForeignKey("wardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BusStop", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Bus", "Bus")
                        .WithMany("BusStops")
                        .HasForeignKey("busID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.BusStation", "BusStation")
                        .WithMany("BusStops")
                        .HasForeignKey("busStationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("BusStation");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Company", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Account", "Account")
                        .WithOne("Company")
                        .HasForeignKey("BusBookTicket.Core.Models.Entity.Company", "accountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.Ward", "Ward")
                        .WithMany("Companies")
                        .HasForeignKey("wardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Customer", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Account", "Account")
                        .WithOne("Customer")
                        .HasForeignKey("BusBookTicket.Core.Models.Entity.Customer", "accountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.Rank", "Rank")
                        .WithMany("Customers")
                        .HasForeignKey("rankID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BusBookTicket.Core.Models.Entity.Ward", "Ward")
                        .WithMany("Customers")
                        .HasForeignKey("wardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Rank");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Discount", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Rank", "Rank")
                        .WithMany("Discounts")
                        .HasForeignKey("rankID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.District", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.AdministrativeUnit", "AdministrativeUnit")
                        .WithMany("Districts")
                        .HasForeignKey("administrativeUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("provinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdministrativeUnit");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Province", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.AdministrativeRegion", "AdministrativeRegion")
                        .WithMany("Provinces")
                        .HasForeignKey("administrativeRegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.AdministrativeUnit", "AdministrativeUnit")
                        .WithMany("Provinces")
                        .HasForeignKey("administrativeUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdministrativeRegion");

                    b.Navigation("AdministrativeUnit");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Review", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Bus", "Bus")
                        .WithMany("Reviews")
                        .HasForeignKey("busID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Seat", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Bus", "Bus")
                        .WithMany("Seats")
                        .HasForeignKey("busID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.SeatType", "SeatType")
                        .WithMany("Seats")
                        .HasForeignKey("seatTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("SeatType");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.SeatType", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Company", "Company")
                        .WithMany("SeatTypes")
                        .HasForeignKey("companyID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Ticket", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Bus", "Bus")
                        .WithMany("Tickets")
                        .HasForeignKey("busID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.TicketItem", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.Ticket", "Ticket")
                        .WithMany("TicketItems")
                        .HasForeignKey("ticketID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Ward", b =>
                {
                    b.HasOne("BusBookTicket.Core.Models.Entity.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusBookTicket.Core.Models.Entity.AdministrativeUnit", "AdministrativeUnit")
                        .WithMany("Wards")
                        .HasForeignKey("administrativeUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdministrativeUnit");

                    b.Navigation("District");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Account", b =>
                {
                    b.Navigation("Company")
                        .IsRequired();

                    b.Navigation("Customer")
                        .IsRequired();
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.AdministrativeRegion", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.AdministrativeUnit", b =>
                {
                    b.Navigation("Districts");

                    b.Navigation("Provinces");

                    b.Navigation("Wards");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Bill", b =>
                {
                    b.Navigation("BillItems");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Bus", b =>
                {
                    b.Navigation("BusStops");

                    b.Navigation("Reviews");

                    b.Navigation("Seats");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BusStation", b =>
                {
                    b.Navigation("BusStops");

                    b.Navigation("TicketEnds");

                    b.Navigation("TicketStarts");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.BusType", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Company", b =>
                {
                    b.Navigation("Buses");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Customer", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Discount", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.District", b =>
                {
                    b.Navigation("Wards");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Rank", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.SeatType", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Ticket", b =>
                {
                    b.Navigation("TicketItems");
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.TicketItem", b =>
                {
                    b.Navigation("BillItem")
                        .IsRequired();
                });

            modelBuilder.Entity("BusBookTicket.Core.Models.Entity.Ward", b =>
                {
                    b.Navigation("BusStations");

                    b.Navigation("Companies");

                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
